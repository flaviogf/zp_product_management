@using ZPProductManagement.Common
@using ZPProductManagement.Web.ViewModels

@model Pagination<IndexProductViewModel>

@section styles {
    <link href="~/css/product.css" rel="stylesheet">
}

<partial name="_Navbar" />

<main class="product">
    <h2 class="product__title">Product management</h2>

    <aside class="product__aside">
        <partial name="_ImportFile" model="new CreateFileViewModel()" />

        <partial name="_ImportProduct" model="new CreateProductViewModel()" />
    </aside>

    <section class="product__section border-1 shadow-1">
        <h3 class="product__section__title">Manage all product list</h3>

        <main class="product__section__list">
            <table>
                <thead>
                    <tr>
                        <th style="min-width: 150px">Product Name</th>
                        <th style="min-width: 100px">Category</th>
                        <th style="min-width: 200px">Description</th>
                        <th style="min-width: 75px; text-align: center">Price</th>
                        <th style="min-width: 75px; text-align: center">Active</th>
                        <th style="min-width: 75px; text-align: center">Actions</th>
                    </tr>
                </thead>

                <tbody>
                    @foreach (var it in Model.Content)
                    {
                        <tr>
                            <td>@it.Name</td>
                            <td>@it.CategoryName</td>
                            <td>@it.Description</td>
                            <td style="text-align: center">@it.Price.ToString("C")</td>
                            <td style="text-align: center">Yes</td>
                            <td style="text-align: center">
                                <a class="product__section__list__button" href="#">Detalhes</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </main>

        <footer class="product__section__pagination">
            @{
                var previousPage = Model.Page - 1;
                var nextPage = Model.Page + 1;
            }

            @if (Model.HasPrevious)
            {
                <a asp-action="Index" asp-controller="Product" asp-route-page="@previousPage" class="product__section__pagination__item">Previous</a>
            }
            else
            {
                <span class="product__section__pagination__item product__section__pagination__item--disabled">Previous</span>
            }

            @if (Model.HasPrevious)
            {
                <a asp-action="Index" asp-controller="Product" asp-route-page="@previousPage" class="product__section__pagination__item">@previousPage</a>
            }

            <span class="product__section__pagination__item product__section__pagination__item--active">@Model.Page</span>

            @if (Model.HasNext)
            {
                <a asp-action="Index" asp-controller="Product" asp-route-page="@nextPage" class="product__section__pagination__item">@nextPage</a>
            }

            @if (Model.HasNext)
            {
                <a asp-action="Index" asp-controller="Product" asp-route-page="@nextPage" class="product__section__pagination__item">Next</a>
            }
            else
            {
                <span class="product__section__pagination__item product__section__pagination__item--disabled">Next</span>
            }
        </footer>
    </section>
</main>

@section scripts {
    <script src="~/js/product.js"></script>
}